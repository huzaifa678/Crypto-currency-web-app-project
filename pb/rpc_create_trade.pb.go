// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: rpc_create_trade.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BuyOrderId    string                 `protobuf:"bytes,2,opt,name=buy_order_id,json=buyOrderId,proto3" json:"buy_order_id,omitempty"`
	SellOrderId   string                 `protobuf:"bytes,3,opt,name=sell_order_id,json=sellOrderId,proto3" json:"sell_order_id,omitempty"`
	MarketId      string                 `protobuf:"bytes,4,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Price         int64                  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Amount        int64                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee           int64                  `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTradeRequest) Reset() {
	*x = CreateTradeRequest{}
	mi := &file_rpc_create_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTradeRequest) ProtoMessage() {}

func (x *CreateTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_create_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTradeRequest.ProtoReflect.Descriptor instead.
func (*CreateTradeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_create_trade_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTradeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateTradeRequest) GetBuyOrderId() string {
	if x != nil {
		return x.BuyOrderId
	}
	return ""
}

func (x *CreateTradeRequest) GetSellOrderId() string {
	if x != nil {
		return x.SellOrderId
	}
	return ""
}

func (x *CreateTradeRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *CreateTradeRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateTradeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateTradeRequest) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type CreateTradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trade         *Trades                `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTradeResponse) Reset() {
	*x = CreateTradeResponse{}
	mi := &file_rpc_create_trade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTradeResponse) ProtoMessage() {}

func (x *CreateTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_create_trade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTradeResponse.ProtoReflect.Descriptor instead.
func (*CreateTradeResponse) Descriptor() ([]byte, []int) {
	return file_rpc_create_trade_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTradeResponse) GetTrade() *Trades {
	if x != nil {
		return x.Trade
	}
	return nil
}

var File_rpc_create_trade_proto protoreflect.FileDescriptor

const file_rpc_create_trade_proto_rawDesc = "" +
	"\n" +
	"\x16rpc_create_trade.proto\x12\x02pb\x1a\vtrade.proto\"\xd3\x01\n" +
	"\x12CreateTradeRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12 \n" +
	"\fbuy_order_id\x18\x02 \x01(\tR\n" +
	"buyOrderId\x12\"\n" +
	"\rsell_order_id\x18\x03 \x01(\tR\vsellOrderId\x12\x1b\n" +
	"\tmarket_id\x18\x04 \x01(\tR\bmarketId\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x03R\x05price\x12\x16\n" +
	"\x06amount\x18\x06 \x01(\x03R\x06amount\x12\x10\n" +
	"\x03fee\x18\a \x01(\x03R\x03fee\"7\n" +
	"\x13CreateTradeResponse\x12 \n" +
	"\x05trade\x18\x01 \x01(\v2\n" +
	".pb.TradesR\x05tradeB:Z8github.com/huzaifa678/Crypto-currency-web-app-project/pbb\x06proto3"

var (
	file_rpc_create_trade_proto_rawDescOnce sync.Once
	file_rpc_create_trade_proto_rawDescData []byte
)

func file_rpc_create_trade_proto_rawDescGZIP() []byte {
	file_rpc_create_trade_proto_rawDescOnce.Do(func() {
		file_rpc_create_trade_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_create_trade_proto_rawDesc), len(file_rpc_create_trade_proto_rawDesc)))
	})
	return file_rpc_create_trade_proto_rawDescData
}

var file_rpc_create_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_create_trade_proto_goTypes = []any{
	(*CreateTradeRequest)(nil),  // 0: pb.CreateTradeRequest
	(*CreateTradeResponse)(nil), // 1: pb.CreateTradeResponse
	(*Trades)(nil),              // 2: pb.Trades
}
var file_rpc_create_trade_proto_depIdxs = []int32{
	2, // 0: pb.CreateTradeResponse.trade:type_name -> pb.Trades
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_create_trade_proto_init() }
func file_rpc_create_trade_proto_init() {
	if File_rpc_create_trade_proto != nil {
		return
	}
	file_trade_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_create_trade_proto_rawDesc), len(file_rpc_create_trade_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_create_trade_proto_goTypes,
		DependencyIndexes: file_rpc_create_trade_proto_depIdxs,
		MessageInfos:      file_rpc_create_trade_proto_msgTypes,
	}.Build()
	File_rpc_create_trade_proto = out.File
	file_rpc_create_trade_proto_goTypes = nil
	file_rpc_create_trade_proto_depIdxs = nil
}
