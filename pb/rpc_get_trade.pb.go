// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: rpc_get_trade.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTradeByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeId       string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTradeByIDRequest) Reset() {
	*x = GetTradeByIDRequest{}
	mi := &file_rpc_get_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeByIDRequest) ProtoMessage() {}

func (x *GetTradeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTradeByIDRequest) Descriptor() ([]byte, []int) {
	return file_rpc_get_trade_proto_rawDescGZIP(), []int{0}
}

func (x *GetTradeByIDRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type GetTradeByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trade         *Trades                `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTradeByIDResponse) Reset() {
	*x = GetTradeByIDResponse{}
	mi := &file_rpc_get_trade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeByIDResponse) ProtoMessage() {}

func (x *GetTradeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_trade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTradeByIDResponse) Descriptor() ([]byte, []int) {
	return file_rpc_get_trade_proto_rawDescGZIP(), []int{1}
}

func (x *GetTradeByIDResponse) GetTrade() *Trades {
	if x != nil {
		return x.Trade
	}
	return nil
}

var File_rpc_get_trade_proto protoreflect.FileDescriptor

const file_rpc_get_trade_proto_rawDesc = "" +
	"\n" +
	"\x13rpc_get_trade.proto\x12\x02pb\x1a\vtrade.proto\"0\n" +
	"\x13GetTradeByIDRequest\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\"8\n" +
	"\x14GetTradeByIDResponse\x12 \n" +
	"\x05trade\x18\x01 \x01(\v2\n" +
	".pb.TradesR\x05tradeB:Z8github.com/huzaifa678/Crypto-currency-web-app-project/pbb\x06proto3"

var (
	file_rpc_get_trade_proto_rawDescOnce sync.Once
	file_rpc_get_trade_proto_rawDescData []byte
)

func file_rpc_get_trade_proto_rawDescGZIP() []byte {
	file_rpc_get_trade_proto_rawDescOnce.Do(func() {
		file_rpc_get_trade_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_get_trade_proto_rawDesc), len(file_rpc_get_trade_proto_rawDesc)))
	})
	return file_rpc_get_trade_proto_rawDescData
}

var file_rpc_get_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_get_trade_proto_goTypes = []any{
	(*GetTradeByIDRequest)(nil),  // 0: pb.GetTradeByIDRequest
	(*GetTradeByIDResponse)(nil), // 1: pb.GetTradeByIDResponse
	(*Trades)(nil),               // 2: pb.Trades
}
var file_rpc_get_trade_proto_depIdxs = []int32{
	2, // 0: pb.GetTradeByIDResponse.trade:type_name -> pb.Trades
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_get_trade_proto_init() }
func file_rpc_get_trade_proto_init() {
	if File_rpc_get_trade_proto != nil {
		return
	}
	file_trade_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_get_trade_proto_rawDesc), len(file_rpc_get_trade_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_get_trade_proto_goTypes,
		DependencyIndexes: file_rpc_get_trade_proto_depIdxs,
		MessageInfos:      file_rpc_get_trade_proto_msgTypes,
	}.Build()
	File_rpc_get_trade_proto = out.File
	file_rpc_get_trade_proto_goTypes = nil
	file_rpc_get_trade_proto_depIdxs = nil
}
