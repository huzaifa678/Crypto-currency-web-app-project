// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: trade.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trades struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeId       string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	BuyOrderId    string                 `protobuf:"bytes,3,opt,name=buy_order_id,json=buyOrderId,proto3" json:"buy_order_id,omitempty"`
	SellOrderId   string                 `protobuf:"bytes,4,opt,name=sell_order_id,json=sellOrderId,proto3" json:"sell_order_id,omitempty"`
	MarketId      string                 `protobuf:"bytes,5,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Price         int64                  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Amount        int64                  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee           int64                  `protobuf:"varint,8,opt,name=fee,proto3" json:"fee,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trades) Reset() {
	*x = Trades{}
	mi := &file_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trades) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trades) ProtoMessage() {}

func (x *Trades) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trades.ProtoReflect.Descriptor instead.
func (*Trades) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

func (x *Trades) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *Trades) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Trades) GetBuyOrderId() string {
	if x != nil {
		return x.BuyOrderId
	}
	return ""
}

func (x *Trades) GetSellOrderId() string {
	if x != nil {
		return x.SellOrderId
	}
	return ""
}

func (x *Trades) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *Trades) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trades) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Trades) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Trades) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_trade_proto protoreflect.FileDescriptor

const file_trade_proto_rawDesc = "" +
	"\n" +
	"\vtrade.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9d\x02\n" +
	"\x06Trades\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12 \n" +
	"\fbuy_order_id\x18\x03 \x01(\tR\n" +
	"buyOrderId\x12\"\n" +
	"\rsell_order_id\x18\x04 \x01(\tR\vsellOrderId\x12\x1b\n" +
	"\tmarket_id\x18\x05 \x01(\tR\bmarketId\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x03R\x05price\x12\x16\n" +
	"\x06amount\x18\a \x01(\x03R\x06amount\x12\x10\n" +
	"\x03fee\x18\b \x01(\x03R\x03fee\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB:Z8github.com/huzaifa678/Crypto-currency-web-app-project/pbb\x06proto3"

var (
	file_trade_proto_rawDescOnce sync.Once
	file_trade_proto_rawDescData []byte
)

func file_trade_proto_rawDescGZIP() []byte {
	file_trade_proto_rawDescOnce.Do(func() {
		file_trade_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trade_proto_rawDesc), len(file_trade_proto_rawDesc)))
	})
	return file_trade_proto_rawDescData
}

var file_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_trade_proto_goTypes = []any{
	(*Trades)(nil),                // 0: pb.Trades
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_trade_proto_depIdxs = []int32{
	1, // 0: pb.Trades.created_at:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_trade_proto_init() }
func file_trade_proto_init() {
	if File_trade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trade_proto_rawDesc), len(file_trade_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trade_proto_goTypes,
		DependencyIndexes: file_trade_proto_depIdxs,
		MessageInfos:      file_trade_proto_msgTypes,
	}.Build()
	File_trade_proto = out.File
	file_trade_proto_goTypes = nil
	file_trade_proto_depIdxs = nil
}
