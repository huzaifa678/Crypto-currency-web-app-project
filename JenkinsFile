pipeline {
    agent any

    environment {
        GO_VERSION = '1.23.4'
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    sh "curl -O https://dl.google.com/go/go${GO_VERSION}.darwin-amd64.tar.gz"
                    sh "sudo tar -C /usr/local -xzf go${GO_VERSION}.darwin-amd64.tar.gz"
                    sh "export PATH=$PATH:/usr/local/go/bin"
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'go build -o crypto-system main.go'
            }
        }

        stage('Test') {
            steps {
                sh 'go test ./...'
            }
        }

        stage('Clean Up') {
            steps {
                cleanWs()
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/crypto-system', allowEmptyArchive: true
            junit '**/test-results.xml'
        }
    }
}